### YamlMime:ManagedReference
items:
- uid: Sudoku.Input_and_Output.MainBoardIO
  commentId: T:Sudoku.Input_and_Output.MainBoardIO
  id: MainBoardIO
  parent: Sudoku.Input_and_Output
  children:
  - Sudoku.Input_and_Output.MainBoardIO.#ctor
  - Sudoku.Input_and_Output.MainBoardIO.InputPossitiveNumber
  - Sudoku.Input_and_Output.MainBoardIO.InputStringBoard
  - Sudoku.Input_and_Output.MainBoardIO.OutputSudokuBoard(Sudoku.Board)
  langs:
  - csharp
  - vb
  name: MainBoardIO
  nameWithType: MainBoardIO
  fullName: Sudoku.Input_and_Output.MainBoardIO
  type: Class
  source:
    remote:
      path: Sudoku/Input_and_Output/MainBoardIO.cs
      branch: master
      repo: https://github.com/YahavDahan/SudokuFinalSolver.git
    id: MainBoardIO
    path: Input_and_Output/MainBoardIO.cs
    startLine: 11
  assemblies:
  - Sudoku
  namespace: Sudoku.Input_and_Output
  summary: "\nThe class manages all input and output from the user\n"
  example: []
  syntax:
    content: public class MainBoardIO
    content.vb: Public Class MainBoardIO
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Sudoku.Input_and_Output.MainBoardIO.#ctor
  commentId: M:Sudoku.Input_and_Output.MainBoardIO.#ctor
  id: '#ctor'
  parent: Sudoku.Input_and_Output.MainBoardIO
  langs:
  - csharp
  - vb
  name: MainBoardIO()
  nameWithType: MainBoardIO.MainBoardIO()
  fullName: Sudoku.Input_and_Output.MainBoardIO.MainBoardIO()
  type: Constructor
  source:
    remote:
      path: Sudoku/Input_and_Output/MainBoardIO.cs
      branch: master
      repo: https://github.com/YahavDahan/SudokuFinalSolver.git
    id: .ctor
    path: Input_and_Output/MainBoardIO.cs
    startLine: 26
  assemblies:
  - Sudoku
  namespace: Sudoku.Input_and_Output
  summary: "\nProduces an object that initializes the properties and determines through which class the board will be absorbed and printed\n"
  example: []
  syntax:
    content: public MainBoardIO()
    content.vb: Public Sub New
  overload: Sudoku.Input_and_Output.MainBoardIO.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Sudoku.Input_and_Output.MainBoardIO.InputPossitiveNumber
  commentId: M:Sudoku.Input_and_Output.MainBoardIO.InputPossitiveNumber
  id: InputPossitiveNumber
  parent: Sudoku.Input_and_Output.MainBoardIO
  langs:
  - csharp
  - vb
  name: InputPossitiveNumber()
  nameWithType: MainBoardIO.InputPossitiveNumber()
  fullName: Sudoku.Input_and_Output.MainBoardIO.InputPossitiveNumber()
  type: Method
  source:
    remote:
      path: Sudoku/Input_and_Output/MainBoardIO.cs
      branch: master
      repo: https://github.com/YahavDahan/SudokuFinalSolver.git
    id: InputPossitiveNumber
    path: Input_and_Output/MainBoardIO.cs
    startLine: 63
  assemblies:
  - Sudoku
  namespace: Sudoku.Input_and_Output
  summary: "\nthe function receive a possitive number from the user\n"
  example: []
  syntax:
    content: public static int InputPossitiveNumber()
    return:
      type: System.Int32
      description: return a possitive number or -1 if an exception occurred
    content.vb: Public Shared Function InputPossitiveNumber As Integer
  overload: Sudoku.Input_and_Output.MainBoardIO.InputPossitiveNumber*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Sudoku.Input_and_Output.MainBoardIO.InputStringBoard
  commentId: M:Sudoku.Input_and_Output.MainBoardIO.InputStringBoard
  id: InputStringBoard
  parent: Sudoku.Input_and_Output.MainBoardIO
  langs:
  - csharp
  - vb
  name: InputStringBoard()
  nameWithType: MainBoardIO.InputStringBoard()
  fullName: Sudoku.Input_and_Output.MainBoardIO.InputStringBoard()
  type: Method
  source:
    remote:
      path: Sudoku/Input_and_Output/MainBoardIO.cs
      branch: master
      repo: https://github.com/YahavDahan/SudokuFinalSolver.git
    id: InputStringBoard
    path: Input_and_Output/MainBoardIO.cs
    startLine: 81
  assemblies:
  - Sudoku
  namespace: Sudoku.Input_and_Output
  summary: "\nThe function performs the reception of the board through the class defined in the property - inputObj\n"
  example: []
  syntax:
    content: public string InputStringBoard()
    return:
      type: System.String
      description: return a string that representing a sudoku board
    content.vb: Public Function InputStringBoard As String
  overload: Sudoku.Input_and_Output.MainBoardIO.InputStringBoard*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Sudoku.Input_and_Output.MainBoardIO.OutputSudokuBoard(Sudoku.Board)
  commentId: M:Sudoku.Input_and_Output.MainBoardIO.OutputSudokuBoard(Sudoku.Board)
  id: OutputSudokuBoard(Sudoku.Board)
  parent: Sudoku.Input_and_Output.MainBoardIO
  langs:
  - csharp
  - vb
  name: OutputSudokuBoard(Board)
  nameWithType: MainBoardIO.OutputSudokuBoard(Board)
  fullName: Sudoku.Input_and_Output.MainBoardIO.OutputSudokuBoard(Sudoku.Board)
  type: Method
  source:
    remote:
      path: Sudoku/Input_and_Output/MainBoardIO.cs
      branch: master
      repo: https://github.com/YahavDahan/SudokuFinalSolver.git
    id: OutputSudokuBoard
    path: Input_and_Output/MainBoardIO.cs
    startLine: 90
  assemblies:
  - Sudoku
  namespace: Sudoku.Input_and_Output
  summary: "\nThe function performs the printing of the board through the class defined in the property - outputObj\n"
  example: []
  syntax:
    content: public void OutputSudokuBoard(Board boardToPrint)
    parameters:
    - id: boardToPrint
      type: Sudoku.Board
      description: the board object we wan to print
    content.vb: Public Sub OutputSudokuBoard(boardToPrint As Board)
  overload: Sudoku.Input_and_Output.MainBoardIO.OutputSudokuBoard*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Sudoku.Input_and_Output
  commentId: N:Sudoku.Input_and_Output
  name: Sudoku.Input_and_Output
  nameWithType: Sudoku.Input_and_Output
  fullName: Sudoku.Input_and_Output
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Sudoku.Input_and_Output.MainBoardIO.#ctor*
  commentId: Overload:Sudoku.Input_and_Output.MainBoardIO.#ctor
  name: MainBoardIO
  nameWithType: MainBoardIO.MainBoardIO
  fullName: Sudoku.Input_and_Output.MainBoardIO.MainBoardIO
- uid: Sudoku.Input_and_Output.MainBoardIO.InputPossitiveNumber*
  commentId: Overload:Sudoku.Input_and_Output.MainBoardIO.InputPossitiveNumber
  name: InputPossitiveNumber
  nameWithType: MainBoardIO.InputPossitiveNumber
  fullName: Sudoku.Input_and_Output.MainBoardIO.InputPossitiveNumber
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Sudoku.Input_and_Output.MainBoardIO.InputStringBoard*
  commentId: Overload:Sudoku.Input_and_Output.MainBoardIO.InputStringBoard
  name: InputStringBoard
  nameWithType: MainBoardIO.InputStringBoard
  fullName: Sudoku.Input_and_Output.MainBoardIO.InputStringBoard
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Sudoku.Input_and_Output.MainBoardIO.OutputSudokuBoard*
  commentId: Overload:Sudoku.Input_and_Output.MainBoardIO.OutputSudokuBoard
  name: OutputSudokuBoard
  nameWithType: MainBoardIO.OutputSudokuBoard
  fullName: Sudoku.Input_and_Output.MainBoardIO.OutputSudokuBoard
- uid: Sudoku.Board
  commentId: T:Sudoku.Board
  parent: Sudoku
  name: Board
  nameWithType: Board
  fullName: Sudoku.Board
- uid: Sudoku
  commentId: N:Sudoku
  name: Sudoku
  nameWithType: Sudoku
  fullName: Sudoku

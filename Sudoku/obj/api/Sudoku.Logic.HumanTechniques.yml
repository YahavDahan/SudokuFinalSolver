### YamlMime:ManagedReference
items:
- uid: Sudoku.Logic.HumanTechniques
  commentId: T:Sudoku.Logic.HumanTechniques
  id: HumanTechniques
  parent: Sudoku.Logic
  children:
  - Sudoku.Logic.HumanTechniques.CheckPossibleNumbersInCurrentIndex(Sudoku.Board,System.Int32,System.Int32)
  - Sudoku.Logic.HumanTechniques.countChangesInTheBoard
  - Sudoku.Logic.HumanTechniques.isBoardValid
  - Sudoku.Logic.HumanTechniques.SolveWithHumanTechniques(Sudoku.Board)
  langs:
  - csharp
  - vb
  name: HumanTechniques
  nameWithType: HumanTechniques
  fullName: Sudoku.Logic.HumanTechniques
  type: Class
  source:
    remote:
      path: Sudoku/Logic/HumanTechniques.cs
      branch: master
      repo: https://github.com/YahavDahan/SudokuFinalSolver.git
    id: HumanTechniques
    path: Logic/HumanTechniques.cs
    startLine: 8
  assemblies:
  - Sudoku
  namespace: Sudoku.Logic
  syntax:
    content: public static class HumanTechniques
    content.vb: Public Module HumanTechniques
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: Sudoku.Logic.HumanTechniques.countChangesInTheBoard
  commentId: F:Sudoku.Logic.HumanTechniques.countChangesInTheBoard
  id: countChangesInTheBoard
  parent: Sudoku.Logic.HumanTechniques
  langs:
  - csharp
  - vb
  name: countChangesInTheBoard
  nameWithType: HumanTechniques.countChangesInTheBoard
  fullName: Sudoku.Logic.HumanTechniques.countChangesInTheBoard
  type: Field
  source:
    remote:
      path: Sudoku/Logic/HumanTechniques.cs
      branch: master
      repo: https://github.com/YahavDahan/SudokuFinalSolver.git
    id: countChangesInTheBoard
    path: Logic/HumanTechniques.cs
    startLine: 10
  assemblies:
  - Sudoku
  namespace: Sudoku.Logic
  syntax:
    content: public static int countChangesInTheBoard
    return:
      type: System.Int32
    content.vb: Public Shared countChangesInTheBoard As Integer
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Sudoku.Logic.HumanTechniques.isBoardValid
  commentId: F:Sudoku.Logic.HumanTechniques.isBoardValid
  id: isBoardValid
  parent: Sudoku.Logic.HumanTechniques
  langs:
  - csharp
  - vb
  name: isBoardValid
  nameWithType: HumanTechniques.isBoardValid
  fullName: Sudoku.Logic.HumanTechniques.isBoardValid
  type: Field
  source:
    remote:
      path: Sudoku/Logic/HumanTechniques.cs
      branch: master
      repo: https://github.com/YahavDahan/SudokuFinalSolver.git
    id: isBoardValid
    path: Logic/HumanTechniques.cs
    startLine: 12
  assemblies:
  - Sudoku
  namespace: Sudoku.Logic
  syntax:
    content: public static bool isBoardValid
    return:
      type: System.Boolean
    content.vb: Public Shared isBoardValid As Boolean
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Sudoku.Logic.HumanTechniques.SolveWithHumanTechniques(Sudoku.Board)
  commentId: M:Sudoku.Logic.HumanTechniques.SolveWithHumanTechniques(Sudoku.Board)
  id: SolveWithHumanTechniques(Sudoku.Board)
  parent: Sudoku.Logic.HumanTechniques
  langs:
  - csharp
  - vb
  name: SolveWithHumanTechniques(Board)
  nameWithType: HumanTechniques.SolveWithHumanTechniques(Board)
  fullName: Sudoku.Logic.HumanTechniques.SolveWithHumanTechniques(Sudoku.Board)
  type: Method
  source:
    remote:
      path: Sudoku/Logic/HumanTechniques.cs
      branch: master
      repo: https://github.com/YahavDahan/SudokuFinalSolver.git
    id: SolveWithHumanTechniques
    path: Logic/HumanTechniques.cs
    startLine: 14
  assemblies:
  - Sudoku
  namespace: Sudoku.Logic
  syntax:
    content: public static int SolveWithHumanTechniques(Board boardToSolve)
    parameters:
    - id: boardToSolve
      type: Sudoku.Board
    return:
      type: System.Int32
    content.vb: Public Shared Function SolveWithHumanTechniques(boardToSolve As Board) As Integer
  overload: Sudoku.Logic.HumanTechniques.SolveWithHumanTechniques*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Sudoku.Logic.HumanTechniques.CheckPossibleNumbersInCurrentIndex(Sudoku.Board,System.Int32,System.Int32)
  commentId: M:Sudoku.Logic.HumanTechniques.CheckPossibleNumbersInCurrentIndex(Sudoku.Board,System.Int32,System.Int32)
  id: CheckPossibleNumbersInCurrentIndex(Sudoku.Board,System.Int32,System.Int32)
  parent: Sudoku.Logic.HumanTechniques
  langs:
  - csharp
  - vb
  name: CheckPossibleNumbersInCurrentIndex(Board, Int32, Int32)
  nameWithType: HumanTechniques.CheckPossibleNumbersInCurrentIndex(Board, Int32, Int32)
  fullName: Sudoku.Logic.HumanTechniques.CheckPossibleNumbersInCurrentIndex(Sudoku.Board, System.Int32, System.Int32)
  type: Method
  source:
    remote:
      path: Sudoku/Logic/HumanTechniques.cs
      branch: master
      repo: https://github.com/YahavDahan/SudokuFinalSolver.git
    id: CheckPossibleNumbersInCurrentIndex
    path: Logic/HumanTechniques.cs
    startLine: 220
  assemblies:
  - Sudoku
  namespace: Sudoku.Logic
  syntax:
    content: public static ulong CheckPossibleNumbersInCurrentIndex(Board board, int row, int col)
    parameters:
    - id: board
      type: Sudoku.Board
    - id: row
      type: System.Int32
    - id: col
      type: System.Int32
    return:
      type: System.UInt64
    content.vb: Public Shared Function CheckPossibleNumbersInCurrentIndex(board As Board, row As Integer, col As Integer) As ULong
  overload: Sudoku.Logic.HumanTechniques.CheckPossibleNumbersInCurrentIndex*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: Sudoku.Logic
  commentId: N:Sudoku.Logic
  name: Sudoku.Logic
  nameWithType: Sudoku.Logic
  fullName: Sudoku.Logic
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Sudoku.Logic.HumanTechniques.SolveWithHumanTechniques*
  commentId: Overload:Sudoku.Logic.HumanTechniques.SolveWithHumanTechniques
  name: SolveWithHumanTechniques
  nameWithType: HumanTechniques.SolveWithHumanTechniques
  fullName: Sudoku.Logic.HumanTechniques.SolveWithHumanTechniques
- uid: Sudoku.Board
  commentId: T:Sudoku.Board
  parent: Sudoku
  name: Board
  nameWithType: Board
  fullName: Sudoku.Board
- uid: Sudoku
  commentId: N:Sudoku
  name: Sudoku
  nameWithType: Sudoku
  fullName: Sudoku
- uid: Sudoku.Logic.HumanTechniques.CheckPossibleNumbersInCurrentIndex*
  commentId: Overload:Sudoku.Logic.HumanTechniques.CheckPossibleNumbersInCurrentIndex
  name: CheckPossibleNumbersInCurrentIndex
  nameWithType: HumanTechniques.CheckPossibleNumbersInCurrentIndex
  fullName: Sudoku.Logic.HumanTechniques.CheckPossibleNumbersInCurrentIndex
- uid: System.UInt64
  commentId: T:System.UInt64
  parent: System
  isExternal: true
  name: UInt64
  nameWithType: UInt64
  fullName: System.UInt64
